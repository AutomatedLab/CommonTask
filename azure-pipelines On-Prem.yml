name: $(BuildID)

trigger:
- '*'

pool:
  name: Default

workspace:
    clean: all

variables:
  GalleryUri: ggggg #will be replaced during lab deployment
  Domain: ddddd #will be replaced during lab deployment
  UserName: uuuuu #will be replaced during lab deployment
  Password: ppppp #will be replaced during lab deployment

steps:
  - task: PowerShell@2
    displayName: Register PowerShell Gallery
    inputs:
      targetType: inline
      script: |
        #always make sure the local PowerShell Gallery is registered correctly
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        $uri = '$(GalleryUri)'
        $name = 'PowerShell'
        $domain = '$(Domain)'
        $userName = '$(UserName)'
        $password = '$(Password)'
        $cred = New-Object pscredential("$domain\$userName", ($password | ConvertTo-SecureString -AsPlainText -Force))
        $r = Get-PSRepository -Name $name -ErrorAction SilentlyContinue
        if (-not $r -or $r.SourceLocation -ne $uri -or $r.PublishLocation -ne $uri) {
            Write-Host "The Source or PublishLocation of the repository '$name' is not correct or the repository is not registered"
            Unregister-PSRepository -Name $name -ErrorAction SilentlyContinue
            Register-PSRepository -Name $name -SourceLocation $uri -PublishLocation $uri -InstallationPolicy Trusted -Credential $cred
            Get-PSRepository
        }
      errorActionPreference: stop
    
  - task: PowerShell@2
    displayName: 'Execute build.ps1'
    inputs:
      targetType: filePath
      filePath: .\Build.ps1
      arguments: -Tasks Init, CleanBuildOutput, SetPsModulePath, CopyModule, IntegrationTest -ResolveDependency -GalleryRepository PowerShell

  - task: PublishTestResults@2
    displayName: 'Publish Integration Test Results'
    inputs:
      testResultsFormat: NUnit
      testResultsFiles: '**/IntegrationTestResults.xml'
      failTaskOnFailedTests: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Module'
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\BuildOutput\Modules\$(Build.Repository.Name)'
      ArtifactName: $(Build.Repository.Name)
      ArtifactType: Container

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Build Folder'
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)'
      ArtifactName: 'SourcesDirectory'
